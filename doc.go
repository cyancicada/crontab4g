/*/ *包crontab4g实现了一个cron规范解析器和作业运行器。

用法

呼叫者可以在给定的时间表上注册要调用的Func。 Cron会跑
他们在自己的goroutines。

c： = cron.New（）
c.AddFunc（“0 30 * * * *”，func （）{fmt.Println（“半小时每小时”）}）
c.AddFunc（“@ hourly”，func （）{fmt.Println（“Every hour”）}）
c.AddFunc（“@ every 1h30m”，func （）{fmt.Println（“Every hour thirty”）}）
c.Start（）
..
// Funcs在他们自己的goroutine中异步调用。
...
// Funcs也可以添加到正在运行的Cron中
c.AddFunc（“@ daily”，func （）{fmt.Println（“Every day”）}）
..
//检查cron作业条目的下一次和上一次运行时间。
检查（c.Entries（））
..
c.Stop（） //停止调度程序（不会停止任何已经运行的作业）。

CRON表达格式

cron表达式表示一组时间，使用6个以空格分隔的字段。

字段名称|强制性？ |允许值|允许特殊字符
---------- | ---------- | -------------- | --------------------------
秒|是的| 0-59 | * /， -
分钟|是的| 0-59 | * /， -
小时|是的| 0-23 | * /， -
一个月的某一天|是的| 1-31 | * /， - ？
月|是的| 1-12或JAN-DEC | * /， -
星期几|是的| 0-6或SUN-SAT | * /， - ？

注意：月份和星期几字段值不区分大小写。 “太阳”，“太阳”，
和“太阳”同样被接受。

特殊字符

星号（*）

星号表示cron表达式将匹配所有的值
领域; 例如，在第5个字段（月）中使用星号表示每个字符
月。

斜线（/）

斜杠用于描述范围的增量。例如3-59 / 15中
第一个字段（分钟）表示每小时的第3分钟和每15分钟
几分钟后。 “* \ / ...”形式相当于“first-last / ...”形式，
也就是说，该字段的最大可能范围内的增量。表格
接受“N / ...”表示“N-MAX / ...”，即从N开始，使用
递增直到该特定范围的结束。它没有环绕。

逗号（，）

逗号用于分隔列表的项目。例如，使用“MON，WED，FRI”
第五场（星期几）将指周一，周三和周五。

连字符（ - ）

连字符用于定义范围。例如，9-17表示每个
上午9点至下午5点之间的小时。

问号（？）

可以使用问号而不是'*'来离开日期或
星期几空白。

预定义的时间表

您可以使用几个预定义的计划之一来代替cron表达式。

进入|说明|相当于
----- | ----------- -------------
@yearly（或@annually）|每年一次，午夜，1月1日| 0 0 0 1 1 *
@monthly |每月运行一次，午夜，月初| 0 0 0 1 * *
@weekly |每周运行一次，周日午夜| 0 0 0 * * 0
@daily（或@midnight）|每天运行一次，午夜| 0 0 0 * * *
@hourly |每小时运行一次，小时开始| 0 0 * * * *

间隔

您还可以安排作业以固定间隔执行。这得到了支持
像这样格式化cron规范：

    @every <duration>

其中“duration”是time.ParseDuration接受的字符串
（http: //golang.org/pkg/time/#ParseDuration）。

例如，“@ every 1h30m10s”将表示激活每个的计划
1小时30分10秒。

注意：间隔不会考虑作业运行时。例如，
如果一份工作需要3分钟才能运行，并计划每5分钟运行一次，
每次运行之间只有2分钟的空闲时间。

时区

所有的解释和安排都在机器的当地时区完成（如
由Go time包提供（http: //www.golang.org/pkg/time）。

请注意，在夏令时跨越式转换期间安排的作业将会发生
不要跑！

线程安全

由于Cron服务与调用代码同时运行，因此有一些
必须注意确保正确同步。

只要调用者，所有cron方法都被设计为正确同步
确保调用之前有明确的发生 - 在它们之间进行排序。

履行

Cron条目存储在一个数组中，按其下一个激活时间排序。克龙
睡到下一个工作要运行。

醒来后：
  - 它运行在该秒钟上处于活动状态的每个条目
  - 它计算运行的作业的下一个运行时间
  - 它按下一个激活时间重新排序条目数组。
  - 它会一直睡到最快的工作。
* /
*/
package crontab4g